{% extends 'project/project.html.twig' %}

{% block title %}Marisol{% endblock %}
{% block subtitle %}Lead Programmer{% endblock %}

{% block routes %}
    {{ _self.route('The Project', '#the-project') }}
    {{ _self.route('Sneak Peak', '#sneak-peak') }}
    {{ _self.route('Responsibilities', '#responsibilities') }}
    {{ _self.route('Procedural Animation', '#procedural-animation') }}
    {{ _self.route('Puzzle System', '#puzzle-system') }}
{% endblock %}

{% block content %}
    {{ _self.heading('The Project') }}
    {{ _self.paragraph("
        <span class=\"italic\">Marisol</span> is a game developed
        in just 8 weeks by a team of 23 students — 5 programmers, 4 designers, and 14 artists — who began the project
        without knowing each other. Players explore the world by interacting with its local residents, solving puzzles,
        and fighting enemies along the way. The project originally began as an art-showcase of 15 artists,
        who established the visual style and built the world over 8 weeks. Afterwards, programmers and designers joined
        turn the world into a game.
        </br>
        </br>
        <span class=\"inline-block\">View the game on <a href=\"https://buas.itch.io/marisol\" target=\"blank\" class=\"
        text-tertiary inline-flex\"> Itch.io <i data-lucide=\"external-link\" class=\"w-4 h-4\"></i></a></span>
    ") }}

    {{ _self.heading('Sneak Peak') }}
    <div class="flex sm:flex-row flex-col gap-x-4">
        {{ _self.video(asset('projects/marisol/mywork_procanim.webm'), 'Step by step progress on procedural animation') }}
        {{ _self.video(asset('projects/marisol/mywork_puzzlesystem.webm'), 'Step by step progress on the puzzle system') }}
    </div>

    {{ _self.heading('Responsibilities') }}
    {{ _self.paragraph("
        As the <span class=\"text-tertiary\">lead programmer</span> on <span class=\"italic\">Marisol</span>, I took on a
        wide range of responsibilities across the project. Some highlights include writing a project-wide code style
        guide, (re-)structuring the project, and helping steer the overall direction alongside the leads and producer.
        I have also worked on important systems that requires good communication, such as <span class=\"text-tertiary\">
        procedural animation</span> and a <span class=\"text-tertiary\">puzzle system</span> that designers used to created puzzles.
    ") }}
    {{ _self.paragraph("
        One of my strengths was being able to clearly communicate technical goals and limitations in a non-technical,
        accessible way, which helped the team make informed decisions and set realistic expectations. I also played a
        key role in <span class=\"text-tertiary\">cross-discipline communication</span> — organizing strike teams, staying up-to-date on team progress, and
        making sure everyone had the direction and support they needed.
    ") }}

    {{ _self.heading('Procedural Animation') }}
    {{ _self.paragraph("
        During the project, we intended to use quite a lot of animations, but it would take too much time for the two
        animators on our team to create all of them. I started working on procedural movement animations for our crab enemy.
    ") }}
    <div class="flex sm:flex-row flex-col gap-x-4">
        {{ _self.image(asset('projects/marisol/enemy_animation.webp'), 'Enemy moving using the procedural animation') }}
        {{ _self.image(asset('projects/marisol/crabosaurus.webp'), 'Easter egg that always got a reaction out of players') }}
    </div>
    {{ _self.paragraph("
        After researching procedural animation techniques online for Unreal Engine's Control Rig Editor, I build my own
        solution based on an online tutorial. In the original, the legs of the spider model would reset to their reference
        position based on a timer. This worked great if our crab was always moving at a slow and constant speed, but if
        it were to move a bit faster, the legs would drag after the crab model we had. I designed a range-based system
        where each leg only moved once it exceeded a set distance, ensuring the crab’s looks good at almost any speed.
    ") }}
    {{ _self.image(asset('projects/marisol/crab_leg_range.png'), 'Range the legs can move in, in Unreal units') }}
    {{ _self.paragraph("
        With the procedural animation working, I started blending it with the hand-made animations the artist created.
        They made several idle and attack animations to give the crab more character, while the procedural system kept
        the movement looking right on any terrain.
    ") }}
    {{ _self.image(asset('projects/marisol/crab_animated.gif'), 'Legs fully animated when moving and rotating') }}

    {{ _self.heading('Puzzle System') }}
    {{ _self.paragraph("
        The game had a focus on puzzles, so I created a system that allowed designers to build them without needing
        programmer support. I started with simple interactions, like pulling levers to open doors, and expanded the
        system after running into limitations. Once it was stable, I documented everything and handed it off for testing.
    ") }}
    <div class="flex sm:flex-row flex-col gap-x-4">
        {{ _self.image(asset('projects/marisol/tower_puzzle_showcase.webp'), 'Standing on a pressure plates triggers parts of the puzzle') }}
        {{ _self.image(asset('projects/marisol/designer_puzzles.webp'), 'Puzzles made by designers using my puzzle system/components') }}
    </div>
    <div class="pb-8">
        <p class="pb-2">
            The system has three components: Puzzle Parts, Validators, and Actions. Each component has a <span
            class="text-tertiary">unique icon</span> in the editor to help designers spot them in the world.
        </p>
        <ul class="list-disc">
            <li><span class="text-tertiary">Puzzle Parts</span> are things like doors, levers, and lights. Each has a boolean state — like open or closed.</li>
            <li><span class="text-tertiary">Validators</span> check the state of one or more parts and trigger changes in others. They’re customizable to fit different puzzle setups.</li>
            <li><span class="text-tertiary">Actions</span> set puzzle parts to a specific state — useful for resets or one-time events.</li>
        </ul>
    </div>

    <div class="flex sm:flex-row flex-col gap-x-4">
        {{ _self.image(asset('projects/marisol/early_puzzle_implementation.webp'), 'Light puzzle prototype') }}
        {{ _self.image(asset('projects/marisol/puzzle_tower.png'), 'Light puzzle final version') }}
    </div>

    {{ _self.paragraph("
        The largest puzzle is inside a tower designed by one of the artists. It’s a light puzzle where all pressure
        plates need to glow to solve it, but stepping on one also toggles the ones around it. As the player moves
        through the puzzle, the pressure plates raise stairs that let them reach the top of the tower to confront the
        antagonist.
    ") }}
    {{ _self.image(asset('projects/marisol/setup_puzzle_example.webp'), 'Setting up some puzzle parts') }}

    <div class="flex flex-wrap gap-4 my-8 justify-evenly">
        <img class="h-16" src="{{ asset('images/buas.png') }}" alt="Breda University of Applied Sciences Logo">
        <img class="h-16" src="{{ asset('images/unreal.png') }}" alt="Unreal Engine Logo">
        <img class="h-16" src="{{ asset('images/jira.png') }}" alt="Jira Logo">
        <img class="h-16" src="{{ asset('images/itchio.png') }}" alt="itch.io Logo">
    </div>
{% endblock %}

